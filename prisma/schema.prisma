// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Country {
  id             String          @id @default(cuid())
  name           String          @unique
  users          User[]
  admins         Admin[]
  products       Product[]
  transactions   Transaction[]
  pettyCash      Float           @default(0)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model User {
  id             String          @id @default(cuid())
  phoneNumber    String          @unique
  password       String
  country        Country         @relation(fields: [countryId], references: [id])
  countryId      String
  transactions   Transaction[]
  balance        Float           @default(0)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Admin {
  id             String          @id @default(cuid())
  username       String          @unique
  password       String
  country        Country         @relation(fields: [countryId], references: [id])
  countryId      String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Product {
  id             String          @id @default(cuid())
  name           String
  image          String
  purchaseCost   Float
  sellingPrice   Float
  stock          Int             @default(0)
  country        Country         @relation(fields: [countryId], references: [id])
  countryId      String
  transactionItems TransactionItem[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@unique([name, countryId])
}

model Transaction {
  id             String          @id @default(cuid())
  user           User            @relation(fields: [userId], references: [id])
  userId         String
  items          TransactionItem[]
  total          Float
  settled        Boolean         @default(false)
  country        Country         @relation(fields: [countryId], references: [id])
  countryId      String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model TransactionItem {
  id             String          @id @default(cuid())
  transaction    Transaction     @relation(fields: [transactionId], references: [id])
  transactionId  String
  product        Product         @relation(fields: [productId], references: [id])
  productId      String
  quantity       Int
  price          Float
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}
